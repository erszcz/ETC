"((choose Nil) ids) :: (List ?A)" 
"((choose id) auto) :: (?A -> ?A)" 
"((f (choose id)) ids) :: (forall t. (t -> t))" 
"((Cons id) ids) :: Type Error: unify failed: (?A -> ?A) :-: (forall t. (t -> t))" 
"((Cons (\\x.x)) ids) :: Type Error: unify failed: (?`A -> ?B) :-: (forall t. (t -> t))" 
"((append (single inc)) (single id)) :: (List ?A)" 
"((g (single id)) ids) :: (forall t. (t -> t))" 
"((map head) (single ids)) :: (List ?A)" 
"((revapp id) poly) :: Type Error: unify failed: (?A -> ?A) :-: (forall t. (t -> t))" 
"((revapp argST) runST) :: Type Error: unify failed: ((ST ?A) Int) :-: (forall s. ((ST s) ?A))" 
"((k (\\x.(h x))) l) :: Type Error: unify failed: (?`A -> ?B) :-: (forall t. (Int -> (t -> t)))" 